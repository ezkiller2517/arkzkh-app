rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions to improve readability
    function isAuthenticated() {
      return request.auth != null;
    }

    // This function assumes you have set an 'organizationId' custom claim on your users.
    // Without this, rule will fail. See Firebase docs on setting custom claims.
    function isUserInOrg(orgId) {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationId == orgId;
    }
    
    function isAdmin(orgId) {
        return isUserInOrg(orgId) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Match the path for draft uploads.
    // Allows any authenticated user of an organization to write into the drafts folder for that org.
    match /organizations/{orgId}/drafts/{draftId}/{allPaths=**} {
      allow read, write: if isUserInOrg(orgId);
    }

    // A more general rule that could allow admins to access anything within their organization's folder.
    // This is optional and provides an admin override.
    match /organizations/{orgId}/{allPaths=**} {
      allow read, write: if isAdmin(orgId);
    }
  }
}

    